// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  isCanceled  Boolean   @default(false) @map("is_canceled")
  city        String?
  venue       String?
  latitude    Float?
  longitude   Float?
  date        DateTime?
  category    String?

  // Host information (direct reference)
  hostId String? @default("")
  host   User?   @relation("HostedActivities", fields: [hostId], references: [id])

  attendees ActivityAttendee[]
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email       String  @unique
  password    String
  displayName String
  // username    String  @unique
  imageUrl    String? @default("https://img.freepik.com/free-psd/3d-render-avatar-character_23-2150611731.jpg?semt=ais_hybrid")
  photos      Photo[]

  // Relationships
  activities ActivityAttendee[]

  hostedActivities Activity[] @relation("HostedActivities")
}

model ActivityAttendee {
  // Composite primary key
  userId     String
  activityId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relationships
  user     User     @relation(fields: [userId], references: [id])
  activity Activity @relation(fields: [activityId], references: [id])

  // Additional fields
  isHost Boolean @default(false)

  @@id([userId, activityId])
}

model Photo {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url      String
  isMain   Boolean @default(false)
  publicId String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId])
}
